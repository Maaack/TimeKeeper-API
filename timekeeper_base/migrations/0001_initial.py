# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2017-01-16 05:36
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
            ],
            options={
                'verbose_name': 'Action',
                'verbose_name_plural': 'Actions',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('raw_text', models.TextField(verbose_name='Raw Title')),
                ('text', models.TextField(verbose_name='Title')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activitys', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('raw_title', models.CharField(max_length=100, verbose_name='Raw Title')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aliass', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Alias',
                'verbose_name_plural': 'Aliases',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('raw_text', models.TextField(verbose_name='Raw Title')),
                ('text', models.TextField(verbose_name='Title')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timekeeper_base.Action')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='EventRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('raw_text', models.TextField(verbose_name='Raw Title')),
                ('text', models.TextField(verbose_name='Title')),
                ('repeats', models.BooleanField(default=False, verbose_name='Repeats')),
                ('occurrences', models.IntegerField(default=1, verbose_name='Occurrences')),
            ],
            options={
                'verbose_name': 'Event Rule',
                'verbose_name_plural': 'Event Rules',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='RelativePosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('raw_title', models.CharField(max_length=100, verbose_name='Raw Title')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('type', models.CharField(default='', max_length=25, verbose_name='Position Type')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relativepositions', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Relative Position',
                'verbose_name_plural': 'Relative Positions',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('interval_type', models.CharField(default='moment', max_length=20, verbose_name='Interval Type')),
                ('interval_duration', models.FloatField(default=1.0, verbose_name='Interval Duration')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='times', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Time',
                'verbose_name_plural': 'Times',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='TimeKeeper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
            ],
            options={
                'verbose_name': 'Time Keeper',
                'verbose_name_plural': 'Time Keepers',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('raw_title', models.CharField(max_length=100, verbose_name='Raw Title')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Timeline',
                'verbose_name_plural': 'Timelines',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='TimeLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timekeeper_base.Time')),
                ('timeline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timekeeper_base.Timeline')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timelinks', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Time Link',
                'verbose_name_plural': 'Time Links',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Perspective',
            fields=[
                ('timekeeper_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='timekeeper_base.TimeKeeper')),
                ('raw_title', models.CharField(max_length=100, verbose_name='Raw Title')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Perspective',
                'verbose_name_plural': 'Perspectives',
                'ordering': ['-created'],
            },
            bases=('timekeeper_base.timekeeper', models.Model),
        ),
        migrations.AddField(
            model_name='timeline',
            name='times',
            field=models.ManyToManyField(through='timekeeper_base.TimeLink', to='timekeeper_base.Time'),
        ),
        migrations.AddField(
            model_name='timeline',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timelines', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='timekeeper',
            name='timeline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timekeeper_base.Timeline'),
        ),
        migrations.AddField(
            model_name='timekeeper',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timekeepers', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='eventrule',
            name='original_time',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='timekeeper_base.Time'),
        ),
        migrations.AddField(
            model_name='eventrule',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventrules', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_rule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timekeeper_base.EventRule'),
        ),
        migrations.AddField(
            model_name='event',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timekeeper_base.RelativePosition'),
        ),
        migrations.AddField(
            model_name='event',
            name='time',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timekeeper_base.Time'),
        ),
        migrations.AddField(
            model_name='event',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='action',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timekeeper_base.Activity'),
        ),
        migrations.AddField(
            model_name='action',
            name='actors',
            field=models.ManyToManyField(to='timekeeper_base.Alias'),
        ),
        migrations.AddField(
            model_name='action',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actions', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('perspective_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='timekeeper_base.Perspective')),
            ],
            options={
                'verbose_name': 'Element',
                'verbose_name_plural': 'Elements',
                'ordering': ['-created'],
            },
            bases=('timekeeper_base.perspective',),
        ),
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('element_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='timekeeper_base.Element')),
                ('type', models.CharField(default='character', max_length=25, verbose_name='Actor Type')),
            ],
            options={
                'verbose_name': 'Actor',
                'verbose_name_plural': 'Actors',
                'ordering': ['-created'],
            },
            bases=('timekeeper_base.element',),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('element_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='timekeeper_base.Element')),
                ('type', models.CharField(default='interaction', max_length=25, verbose_name='Product Type')),
                ('elements', models.ManyToManyField(related_name='parent_products', to='timekeeper_base.Element')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created'],
            },
            bases=('timekeeper_base.element',),
        ),
        migrations.AddField(
            model_name='relativeposition',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timekeeper_base.Actor'),
        ),
        migrations.AddField(
            model_name='alias',
            name='actor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timekeeper_base.Actor'),
        ),
    ]
